Индексы – объекты базы данных, создаваемые по таблице (представлению) с целью улучшения производительности запросов поиска данных. Формируются из значений одного или нескольких столбцов, могут быть уникальными, составными, покрывающими. Структура данных, лежащая в основе индекса – сбалансированное дерево.

Зачем нужны: для улучшения производительности операции поиска в базе данных. 

Как создаются: 
CREATE [UNIQUE] INDEX IndexName
ON TableName (ColumnName1 [, ColumnName2, ...]);

Кластеризованный индекс: может быть только один на таблицу. Кластеризованный индекс хранит реальные строки данных в листьях индекса. По сути это сортировка строк таблицы согласно определению индекса, благодаря чему достигается улучшение производительности поиска по индексированным столбцам. Лучше всего создавать кластеризованный индекс по первичному ключу.
При создании кластеризованного индекса по столбцу, содержащему дубликаты значений, происходит автоматическое добавление к дублирующимся значениям целочисленного уникального идентификатора. 
Если в таблице нет кластеризованного индекса, она называется кучей.


Некластеризованные индексы: листья некластеризованного индекса содержат только те столбцы (ключевые), по которым определен данный индекс, а также указатель на строки с реальными данными в таблице. 
Некластеризованных индексов может быть много для одной таблицы, но они не могут быть сортированными – таблица может находиться в сортированном состоянии только по кластеризованному индексу при его наличии.

Преимущества: создание индекса помогает улучшить производительность операций поиска. Для оптимальной производительности индексы создаются по тем столбцам, которые часто фигурируют в запросах.

Недостатки: увеличение числа индексов замедляет операции добавления, обновления, удаления строк таблицы, поскольку при этом приходится обновлять сами индексы. Кроме того, индексы занимают дополнительный объем памяти.

Вывод: необходимо правильно проектировать базу данных и использовать индексы при необходимости. Наибольший прирост производительности может дать кластеризованный индекс по первичному ключу. Некластеризованные индексы нужно создавать при необходимости улучшить производительность поиска по конкретным часто используемым столбцам таблицы.
